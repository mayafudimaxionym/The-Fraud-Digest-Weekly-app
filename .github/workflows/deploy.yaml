# .github/workflows/deploy.yaml

name: Deploy Services to Google Cloud

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: fraud-digest-app-v2-469310
  REGION: europe-west1
  SERVICE_NAME: fraud-analysis-processor-v2
  TOPIC_NAME: analysis-requests
  TRIGGER_NAME: fraud-analysis-processor-v2-trigger
  TRIGGER_SA: eventarc-trigger-sa@fraud-digest-app-v2-469310.iam.gserviceaccount.com

jobs:
  deploy-backend:
    name: Deploy Backend Function and Trigger
    runs-on: ubuntu-latest

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: 'projects/963241002796/locations/global/workloadIdentityPools/github-pool/providers/github-provider'
          service_account: 'github-actions-deployer@fraud-digest-app-v2-469310.iam.gserviceaccount.com'

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v2

      - name: Check for Gemini Model Access
        run: |
          echo "Checking for access to gemini-1.0-pro in ${{ env.REGION }}..."
          gcloud ai models describe projects/google/locations/${{ env.REGION }}/publishers/google/models/gemini-1.0-pro
          #gcloud ai models describe projects/google/locations/${{ env.REGION }}/publishers/google/models/gemini-2.5-pro
          #gcloud ai models describe projects/google/locations/${{ env.REGION }}/publishers/google/models/gemini-*
      # --- END OF NEW STEP ---


      - name: Deploy Cloud Function using gcloud
        run: |
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --project=${{ env.PROJECT_ID }} \
            --region=${{ env.REGION }} \
            --source=./backend \
            --ingress=internal \
            --allow-unauthenticated \
            --memory=512Mi \
            --set-env-vars="GCP_PROJECT=${{ env.PROJECT_ID }}" \
            --quiet

      - name: Create or Update Eventarc Trigger
        run: |
          gcloud eventarc triggers describe ${{ env.TRIGGER_NAME }} \
            --project=${{ env.PROJECT_ID }} \
            --location=${{ env.REGION }} && \
          echo "Trigger already exists. No action needed." || \
          gcloud eventarc triggers create ${{ env.TRIGGER_NAME }} \
            --project=${{ env.PROJECT_ID }} \
            --location=${{ env.REGION }} \
            --destination-run-service=${{ env.SERVICE_NAME }} \
            --destination-run-region=${{ env.REGION }} \
            --event-filters="type=google.cloud.pubsub.topic.v1.messagePublished" \
            --transport-topic=${{ env.TOPIC_NAME }} \
            --service-account=${{ env.TRIGGER_SA }}
