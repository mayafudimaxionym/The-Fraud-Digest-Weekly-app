# .github/workflows/deploy-all.yml

name: Deploy All Services to Google Cloud

on:
  push:
    branches: [ "main" ]
    paths:
      - 'frontend/**'
      - 'backend/**'
      - 'terraform/**'
      - '.github/workflows/deploy-all.yml'
      - 'Dockerfile'
  workflow_dispatch:

env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_REGION: 'europe-west1'
  REPOSITORY_ID: 'fraud-digest-repo'

jobs:
  terraform-apply:
    name: Apply Terraform Infrastructure
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WIF_PROVIDER }}
          service_account: ${{ secrets.GCP_SA_EMAIL }}
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
      - name: Terraform Init
        run: terraform -chdir=./terraform init -input=false
      - name: Terraform Plan
        run: |
          terraform -chdir=./terraform plan -input=false -out=tfplan \
            -var="gcp_project_id=${{ env.GCP_PROJECT_ID }}" \
            -var="gcp_sa_email=${{ secrets.GCP_SA_EMAIL }}"
      - name: Terraform Apply
        run: terraform -chdir=./terraform apply -input=false -auto-approve "tfplan"

  build-and-deploy:
    name: Build and Deploy ${{ matrix.service.name }}
    runs-on: ubuntu-latest
    needs: terraform-apply
    permissions:
      contents: 'read'
      id-token: 'write'
      
    strategy:
      matrix:
        service:
          - name: 'fraud-digest-frontend'
            source: '.'
          - name: 'fraud-analysis-processor-v2'
            source: './backend'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WIF_PROVIDER }}
          service_account: ${{ secrets.GCP_SA_EMAIL }}
      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
      - name: Build and Push Docker image
        run: |
          gcloud builds submit ${{ matrix.service.source }} \
            --project=${{ env.GCP_PROJECT_ID }} \
            --region=${{ env.GCP_REGION }} \
            --tag=${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.REPOSITORY_ID }}/${{ matrix.service.name }}:${{ github.sha }}
      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ matrix.service.name }} \
            --project=${{ env.GCP_PROJECT_ID }} \
            --region=${{ env.GCP_REGION }} \
            --image=${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.REPOSITORY_ID }}/${{ matrix.service.name }}:${{ github.sha }} \
            --quiet
      - name: Show Service URL
        if: matrix.service.name == 'fraud-digest-frontend'
        run: |
          SERVICE_URL=$(gcloud run services describe ${{ matrix.service.name }} --project=${{ env.GCP_PROJECT_ID }} --region=${{ env.GCP_REGION }} --format='value(status.url)')
          echo "${{ matrix.service.name }} is deployed at: $SERVICE_URL"
          