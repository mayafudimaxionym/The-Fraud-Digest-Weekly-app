# .github/workflows/deploy-frontend.yml

name: Build and Deploy Frontend to Cloud Run

on:
  # Trigger the workflow on pushes to the main branch,
  # but only if files in the 'frontend/' directory or this workflow file itself were changed.
  push:
    branches: [ "main" ]
    paths:
      - 'frontend/**'
      - '.github/workflows/deploy-frontend.yml'
      - 'Dockerfile' # Or the specific Dockerfile for the frontend
      - 'terraform/**'
      
  # Allows to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_REGION: 'europe-west1'
  SERVICE_NAME: 'fraud-digest-frontend'
  REPOSITORY_ID: 'fraud-digest-repo'
  PUBSUB_TOPIC_ID: 'fraud-digest-jobs'

jobs:
  build-and-deploy:
    name: Build and Deploy Frontend
    runs-on: ubuntu-latest
    
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WIF_PROVIDER }}
          service_account: ${{ secrets.GCP_SA_EMAIL }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform -chdir=./terraform init

      - name: Terraform Apply
        run: |
          terraform -chdir=./terraform apply -auto-approve \
            -var="gcp_project_id=${{ env.GCP_PROJECT_ID }}" \
            -var="gcp_region=${{ env.GCP_REGION }}" \
            -var="frontend_service_name=${{ env.SERVICE_NAME }}" \
            -var="repository_id=${{ env.REPOSITORY_ID }}" \
            -var="pubsub_topic_id=${{ env.PUBSUB_TOPIC_ID }}"

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v2

      - name: Build and Push Docker image using Cloud Build
        run: |-
          gcloud builds submit --region ${{ env.GCP_REGION }} --tag \
            ${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.REPOSITORY_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }}

      - name: Deploy new image to Cloud Run
        id: deploy
        run: |-
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image ${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.REPOSITORY_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }} \
            --region ${{ env.GCP_REGION }} \
            --quiet
            
      - name: Show Cloud Run Service URL
        run: |-
          SERVICE_URL=$(gcloud run service describe ${{ env.SERVICE_NAME }} --region=${{ env.GCP_REGION }} --format='value(status.url)')
          echo "Frontend is deployed at $SERVICE_URL"
          echo "SERVICE_URL=$SERVICE_URL" >> $GITHUB_ENV
